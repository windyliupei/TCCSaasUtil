port: 6000 # port to listen for client connections
host: "127.0.0.1"
 
http_port: 9600 # HTTP monitoring port
 
tls {
  cert_file: "./certs/server-cert.pem"
  key_file:  "./certs/server-key.pem"
  timeout:    0.5
  cipher_suites: [
                "TLS_RSA_WITH_RC4_128_SHA",
                "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
                "TLS_RSA_WITH_AES_128_CBC_SHA",
                "TLS_RSA_WITH_AES_256_CBC_SHA",
                "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA",
                "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA",
                "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA",
                "TLS_ECDHE_RSA_WITH_RC4_128_SHA",
                "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA",
                "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA",
                "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA",
                "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
  ] 
}
 
# Authorization for client connections
authorization {
  user:     natsuser
  password: natspassword
  timeout:  3
}
 
# Cluster definition
cluster {
 
  host: '0.0.0.0'  # host/net interface
  port: 6500         # port for inbound route connections
 
  # Authorization for route connections
  authorization {
    user: aaa
    password: bbb
    timeout: 1
  }
 
  # Routes are actively solicited and connected to from this server.
  # Other servers can connect to us if they supply the correct credentials
  # in their routes definitions from above.
  routes = [
    nats-route://aaa:bbb@127.0.0.1:4500
    nats-route://aaa:bbb@127.0.0.1:5500
  ]
}
 
# logging options
debug:   false
trace:   false
logtime: true
log_file: "gnatsd-6000.log"
 
# pid file
pid_file: "gnatsd-6000.pid"
 
# Some system overides
 
# max_connections
max_connections: 65536
 
# maximum protocol control line
max_control_line: 2048
 
# maximum payload
max_payload: 16777216
 
# slow consumer threshold
max_pending_size: 1677721